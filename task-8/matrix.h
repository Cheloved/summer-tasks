/**
 * @file matrix.h
 * @brief Заголовочный файл для работы с квадратными матрицами.
 *
 * Содержит объявления функций для инициализации, умножения, вывода и освобождения памяти
 * динамических квадратных матриц. Также содержит глобальные переменные,
 * используемые в процессе вычислений.
 *
 * @author Ракитин Илья Алексеевич
 */

#pragma once

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

/**
 * @var global_row
 * @brief Глобальная переменная для отслеживания текущего индекса строки при умножении матриц.
 */
extern int global_row;

/**
 * @var global_col
 * @brief Глобальная переменная для отслеживания текущего индекса столбца при умножении матриц.
 */
extern int global_col;

/**
 * @brief Выделяет память под квадратную матрицу размером size x size.
 *
 * Все элементы инициализируются нулями.
 *
 * @param size Размер матрицы (количество строк/столбцов).
 * @return Указатель на выделенную матрицу или NULL в случае ошибки.
 */
int** init_mat_square(int size);

/**
 * @brief Освобождает память, выделенную под квадратную матрицу.
 *
 * @param mat Указатель на матрицу.
 * @param size Количество строк/столбцов матрицы.
 * @return Возвращает 0 при успешном завершении.
 */
int free_mat_square(int** mat, int size);

/**
 * @brief Умножает две квадратные матрицы размером size x size.
 *
 * Результат сохраняется в матрицу result.
 *
 * @param size Размер матриц (строки/столбцы).
 * @param a Первая матрица (левый операнд).
 * @param b Вторая матрица (правый операнд).
 * @param result Матрица, в которую будет записан результат.
 * @return Возвращает 0 при успешном завершении.
 */
int matrix_multiply_square(int size, int** a, int** b, int** result);

/**
 * @brief Выводит матрицу в терминал.
 *
 * @param mat Указатель на матрицу.
 * @param size Количество строк/столбцов матрицы.
 */
void print_mat(int** mat, int size);
