/**
 * @file merge.h
 * @brief Заголовочный файл реализации параллельной сортировки слиянием.
 *
 * Содержит объявление структуры данных для передачи параметров в поток,
 * объявления функций для запуска сортировки
 *
 * @author Ракитин Илья Алексеевич
 */

#pragma once

#include <stdio.h>
#include <pthread.h>
#include <stdint.h>
#include <stdlib.h>
#include <unistd.h>
#include "utils.h"

/**
 * @struct s_data
 * @brief Структура данных для передачи параметров в поток сортировки.
 *
 * Используется для передачи контекста сортировки в отдельный поток.
 */
typedef struct
{
    uint32_t iter;      /**< Текущая глубина разделения (для отладки) */
    char*    input;     /**< Исходный текст */
    long*    ar;        /**< Указатель на исходный массив индексов новых строк */
    long     left_idx;  /**< Индекс начала среза для текущего потока */
    long     right_idx; /**< Индекс конца среза */
    long*    result;    /**< Массив, куда будет сохранен результат слияния */
} s_data;

/**
 * @brief Объединяет два отсортированных массива в один.
 *
 * Сравнивает элементы по значениям строк через функцию linecmp().
 * Сохраняет результат в поле `result` структуры `data`.
 *
 * @param data Указатель на структуру данных, содержащую ссылку на текст и выходной массив.
 * @param l Левый массив индексов строк.
 * @param lsize Размер левого массива.
 * @param r Правый массив индексов строк.
 * @param rsize Размер правого массива.
 */
void merge_arrays(s_data* data, long* l, int lsize, long* r, int rsize);

/**
 * @brief Потоковая функция, реализующая сортировку слиянием.
 *
 * Рекурсивно разбивает массив, сортирует части в отдельных потоках,
 * затем выполняет слияние результатов.
 *
 * @param arg Указатель на структуру `s_data`, содержащую данные для сортировки.
 * @return Всегда возвращает NULL.
 */
void* merge_sort_thread(void* arg);

/**
 * @brief Параллельная сортировка слиянием с использованием потоков.
 *
 * Запускает сортировку в отдельном потоке, используя рекурсивное деление
 * массива и последующее слияние частей.
 *
 * @param input Указатель на общий буфер с текстом.
 * @param array Входной массив индексов строк.
 * @param length Длина входного массива.
 * @param result Выходной массив отсортированных индексов строк.
 * @return Возвращает 0 при успешном завершении.
 */
int merge_sort(char* input, long* array, long length, long* result);
